extern "C" {
  fn opencv_create_image(width : i32, height : i32) -> &mut[f64];
  fn opencv_load_image(path : &[u8], width : &i32, height : &i32) -> &mut[f64];
  fn opencv_write_image(img : &[f64], filename : &[u8]) -> ();
}

fn create_image(width : i32, height : i32) -> image {
  let mut img : image;

  img.buffer = Buffer {
    device: 0,
    data: opencv_create_image(width, height) as &[i8]
  };

  img.width = width;
  img.height = height;
  img.device_data = get_image_device_data(img);

  img
}

fn load_image(filename : &[u8]) -> image {
  let mut img : image;
  let pwidth = &mut img.width;
  let pheight = &mut img.height;

  img.buffer = Buffer {
    device: 0,
    data: opencv_load_image(filename, pwidth, pheight) as &[i8]
  };

  img.device_data = get_image_device_data(img);

  img
}

fn write_image(img : image, filename : &[u8]) -> () {
  opencv_write_image(img.buffer.data as &[f64], filename);
}
