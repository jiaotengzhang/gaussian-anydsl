/* Sets image pixel at (x, y) coordinates */
fn set_pixel(img : image, x : i32, y : i32, value : f64) -> () {
  bitcast[&mut[1][f64]](img.data)(y * img.width + x) = value
}

/* Gets image pixel at (x, y) coordinates */
fn get_pixel(img : image, x : i32, y : i32) -> (f64) {
  bitcast[&[1][f64]](img.data)(y * img.width + x)
}

fn iterate(input_image : image, output_image : image, body: fn(i32, i32) -> ()) {
  let accelerator = cuda_accelerator(0);
  let grid = (image.width, image.height, 1);
  let block = (128, 1, 1);

  with accelerator.exec(grid, block) @{
    let gid_x = acc.bidx() * acc.bdimx() + acc.tidx();
    let gid_y = acc.bidy() * acc.bdimy() + acc.tidy();

    if gid_x < image.width && gid_y < image.height {
      body(gid_x, gid_y);
    }
  }
}
